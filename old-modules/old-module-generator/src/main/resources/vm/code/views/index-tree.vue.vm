<template>
  <!--树结构-->
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
        #foreach($column in $columnsBos)
            #if($column.query)
                #set($dictType=! $column.enumInfos.isEmpty())
                #set($AttrName=$column.enumName)
                #set($comment=$column.columnComment)

                #if($column.htmlType == "input")
                  <el-form-item label="${comment}" prop="${column.javaFiled}">
                    <el-input
                        v-model="queryParams.${column.javaFiled}"
                        placeholder="请输入${comment}"
                        clearable
                        @keyup.enter.native="handleQuery"
                    />
                  </el-form-item>
                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
                  <el-form-item label="${comment}" prop="${column.javaFiled}">
                    <el-select v-model="queryParams.${column.javaFiled}" placeholder="请选择${comment}" clearable>
                      <el-option
                          v-for="option in ${column.javaFiled}Enum.values()"
                          :key="option.value"
                          :label="option.label"
                          :value="option.value"
                      />
                    </el-select>
                  </el-form-item>
                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
                  <el-form-item label="${comment}" prop="${column.javaFiled}">
                    <el-select v-model="queryParams.${column.javaFiled}" placeholder="请选择${comment}" clearable>
                      <el-option label="请选择字典生成" value=""/>
                    </el-select>
                  </el-form-item>
                #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
                  <el-form-item label="${comment}" prop="${column.javaFiled}">
                    <el-date-picker clearable
                                    v-model="queryParams.${column.javaFiled}"
                                    type="date"
                                    value-format="yyyy-MM-dd"
                                    placeholder="选择${comment}">
                    </el-date-picker>
                  </el-form-item>
                #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                  <el-form-item label="${comment}">
                    <el-date-picker
                        v-model="daterange${AttrName}"
                        style="width: 240px"
                        value-format="yyyy-MM-dd"
                        type="daterange"
                        range-separator="-"
                        start-placeholder="开始日期"
                        end-placeholder="结束日期"
                    ></el-date-picker>
                  </el-form-item>
                #end
            #end
        #end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
            type="primary"
            plain
            icon="el-icon-plus"
            size="mini"
            @click="handleAdd"
            v-hasPermi="['${generatorBo.moduleName}:${tablesBo.objectName}:add']"
        >新增
        </el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
            type="info"
            plain
            icon="el-icon-sort"
            size="mini"
            @click="toggleExpandAll"
        >展开/折叠
        </el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table
        v-if="refreshTable"
        v-loading="loading"
        :data="${tablesBo.objectName}List"
        row-key="${tablesBo.treeCode}"
        :default-expand-all="isExpandAll"
        :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
    >
        #foreach($column in $columnsBos)
            #set($javaField=$column.javaFiled)
            #set($comment=$column.columnComment)
            #set($dictType= !$column.enumInfos.isEmpty())
            #if($column.primaryKey)
            #elseif($column.list && $column.htmlType == "datetime")
              <el-table-column label="${comment}" align="center" prop="${javaField}" width="180">
                <template slot-scope="scope">
                  <span>{{ parseTime(scope.row.${javaField}, '{y}-{m}-{d}') }}</span>
                </template>
              </el-table-column>
            #elseif($column.list && $column.htmlType == "imageUpload")
              <el-table-column label="${comment}" align="center" prop="${javaField}" width="100">
                <template slot-scope="scope">
                  <image-preview :src="scope.row.${javaField}" :width="50" :height="50"/>
                </template>
              </el-table-column>
            #elseif($column.list &&  $dictType)
              <el-table-column label="${comment}" align="center" prop="${javaField}">
                <template slot-scope="scope">
                    #if($column.htmlType == "checkbox")
                      <enum-tag :options="${column.javaFiled}Enum.values()"
                                :value="scope.row.${javaField} ? scope.row.${javaField}.split(',') : []"/>
                    #else
                      <enum-tag :options="${column.javaFiled}Enum.values()" :value="scope.row.${javaField}"/>
                    #end
                </template>
              </el-table-column>
            #elseif($column.list && "" != $javaField)
                #if(${foreach.index} == 1)
                  <el-table-column label="${comment}" prop="${javaField}"/>
                #else
                  <el-table-column label="${comment}" align="center" prop="${javaField}"/>
                #end
            #end
        #end
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
              size="mini"
              type="text"
              icon="el-icon-edit"
              @click="handleUpdate(scope.row)"
              v-hasPermi="['${generatorBo.moduleName}:${tablesBo.objectName}:edit']"
          >修改
          </el-button>
          <el-button
              size="mini"
              type="text"
              icon="el-icon-plus"
              @click="handleAdd(scope.row)"
              v-hasPermi="['${generatorBo.moduleName}:${tablesBo.objectName}:add']"
          >新增
          </el-button>
          <el-button
              size="mini"
              type="text"
              icon="el-icon-delete"
              @click="handleDelete(scope.row)"
              v-hasPermi="['${generatorBo.moduleName}:${tablesBo.objectName}:remove']"
          >删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>

    <!-- 添加或修改 ${tablesBo.tableComment} 对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="500px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
          #foreach($column in $columnsBos)
              #set($field=$column.javaFiled)
              #if($column.insert && !$column.primaryKey)
                  #set($comment=$column.columnComment)
                  #set($dictType=$column.enumInfos.isEmpty())
                  #if("" != $tablesBo.treeParentCode && $field == ${tablesBo.treeParentCode})
                    <el-form-item label="${comment}" prop="${tablesBo.treeParentCode}">
                      <treeselect v-model="form.${tablesBo.treeParentCode}"
                                  :options="${tablesBo.objectName}Options" :normalizer="normalizer"
                                  placeholder="请选择${comment}"/>
                    </el-form-item>
                  #elseif($column.htmlType == "input")
                    <el-form-item label="${comment}" prop="${field}">
                      <el-input v-model="form.${field}" placeholder="请输入${comment}"/>
                    </el-form-item>
                  #elseif($column.htmlType == "imageUpload")
                    <el-form-item label="${comment}" prop="${field}">
                      <image-upload v-model="form.${field}"/>
                    </el-form-item>
                  #elseif($column.htmlType == "fileUpload")
                    <el-form-item label="${comment}" prop="${field}">
                      <file-upload v-model="form.${field}"/>
                    </el-form-item>
                  #elseif($column.htmlType == "editor")
                    <el-form-item label="${comment}">
                      <editor v-model="form.${field}" :min-height="192"/>
                    </el-form-item>
                  #elseif($column.htmlType == "select" && "" != $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-select v-model="form.${field}" placeholder="请选择${comment}">
                        <el-option
                            v-for="option in ${column.javaFiled}Enum.values()"
                            :key="option.value"
                            :label="option.desc"
                            :value="option.value"
                        ></el-option>
                      </el-select>
                    </el-form-item>
                  #elseif($column.htmlType == "select" && $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-select v-model="form.${field}" placeholder="请选择${comment}">
                        <el-option label="请选择字典生成" value=""/>
                      </el-select>
                    </el-form-item>
                  #elseif($column.htmlType == "checkbox" && "" != $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-checkbox-group v-model="form.${field}">
                        <el-checkbox
                            v-for="option in ${column.javaFiled}Enum.values()"
                            :key="option.value"
                            :label="option.value"
                        >{{option.desc}}
                        </el-checkbox>
                      </el-checkbox-group>
                    </el-form-item>
                  #elseif($column.htmlType == "checkbox" && $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-checkbox-group v-model="form.${field}">
                        <el-checkbox>请选择字典生成</el-checkbox>
                      </el-checkbox-group>
                    </el-form-item>
                  #elseif($column.htmlType == "radio" && "" != $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-radio-group v-model="form.${field}">
                        <el-radio
                            v-for="option in ${column.javaFiled}Enum.values()"
                            :key="option.value"
                            :label="option.value"
                        >{{option.desc}}
                        </el-radio>
                      </el-radio-group>
                    </el-form-item>
                  #elseif($column.htmlType == "radio" && $dictType)
                    <el-form-item label="${comment}" prop="${field}">
                      <el-radio-group v-model="form.${field}">
                        <el-radio label="1">请选择字典生成</el-radio>
                      </el-radio-group>
                    </el-form-item>
                  #elseif($column.htmlType == "datetime")
                    <el-form-item label="${comment}" prop="${field}">
                      <el-date-picker clearable
                                      v-model="form.${field}"
                                      type="date"
                                      value-format="yyyy-MM-dd"
                                      placeholder="选择${comment}">
                      </el-date-picker>
                    </el-form-item>
                  #elseif($column.htmlType == "textarea")
                    <el-form-item label="${comment}" prop="${field}">
                      <el-input v-model="form.${field}" type="textarea" placeholder="请输入内容"/>
                    </el-form-item>
                  #end
              #end
          #end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
  import {add${tablesBo.className}, del${tablesBo.className}, get${tablesBo.className}, list${tablesBo.className}, update${tablesBo.className}} from "@/api/";
  import {${column.javaFiled}Enum} from '@/utils/enums/';
  import Treeselect from "@riophae/vue-treeselect";
  import "@riophae/vue-treeselect/dist/vue-treeselect.css";

  export default {
    name: "${tablesBo.objectName}",
    components: {
      Treeselect
    },
    data() {
      return {
          #foreach($column in $columnsBos)
              #if(! $column.enumInfos.isEmpty())
                      ${column.javaFiled}Enum: ${column.javaFiled}Enum,
              #end
          #end
        // 遮罩层
        loading: true,
        // 显示搜索条件
        showSearch: true,
        // ${tablesBo.tableComment}表格数据
              ${tablesBo.objectName}List: [],
        // ${tablesBo.tableComment}树选项
              ${tablesBo.objectName}Options: [],
        // 弹出层标题
        title: "",
        // 是否显示弹出层
        open: false,
        // 是否展开，默认全部展开
        isExpandAll: true,
        // 重新渲染表格状态
        refreshTable: true,
          #foreach ($column in $columnsBos)
              #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                  #set($AttrName=$column.enumName)
                // $comment.columnComment
                daterange${AttrName}: [],
              #end
          #end
        // 查询参数
        queryParams: {
            #foreach ($column in $columnsBos)
                #if($column.query)
                        $column.javaFiled: null#if($foreach.count != $columnsBos.size()),#end
                #end
            #end
        },
        // 表单参数
        form: {},
        // 表单校验
        rules: {
            #foreach ($column in $columnsBos)
                #if($column.required)
                    #set($comment=$column.columnComment)
                        $column.javaFiled: [
                    {
                      required: true, message: "$comment不能为空", trigger: #if($column.htmlType ==
                        "select" || $column.htmlType == "radio")"change"#else"blur"#end }
                  ]#if($foreach.count != $columnsBos.size()),#end
                #end
            #end
        }
      };
    },
    created() {
      this.getList();
    },
    methods: {
      /** 查询 ${tablesBo.tableComment} 列表 */
      getList() {
        this.loading = true;
          #foreach ($column in $columnsBos)
              #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                this.queryParams.params = {};
                  #break
              #end
          #end
          #foreach ($column in $columnsBos)
              #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                  #set($AttrName=$column.enumName)
                if (null != this.daterange${AttrName} && '' !== this.daterange${AttrName}) {
                  this.queryParams.begin${AttrName} = this.daterange${AttrName}[0];
                  this.queryParams.end${AttrName} = this.daterange${AttrName}[1];
                }
              #end
          #end
        list${tablesBo.className}(this.queryParams).then(response => {
          this.${tablesBo.objectName}List = this.handleTree(response.data.rows, "${tablesBo.treeCode}", "${tablesBo.treeParentCode}");
          this.loading = false;
        });
      },
      /** 转换 ${tablesBo.tableComment} 数据结构 */
      normalizer(node) {
        if (node.children && !node.children.length) {
          delete node.children;
        }
        return {
          id: node.${tablesBo.treeCode},
          label: node.${tablesBo.treeName},
          children: node.children
        };
      },
      /** 查询 ${tablesBo.tableComment} 下拉树结构 */
      getTreeselect() {
        list${tablesBo.ClassName}().then(response => {
          this.${tablesBo.objectName}Options = [];
          const data = {${tablesBo.treeCode}: 0, ${tablesBo.treeName}: '顶级节点', children: []};
          data.children = this.handleTree(response.data.rows, "${tablesBo.treeCode}", "${tablesBo.treeParentCode}");
          this.${tablesBo.objectName}Options.push(data);
        });
      },
      // 取消按钮
      cancel() {
        this.open = false;
        this.reset();
      },
      // 表单重置
      reset() {
        this.form = {
            #foreach ($column in $columnsBos)
                #if($column.htmlType == "checkbox")
                        $column.javaFiled: []#if($foreach.count != $columnsBos.size()),#end
                #else
                        $column.javaFiled: null#if($foreach.count != $columnsBos.size()),#end
                #end
            #end
        };
        this.resetForm("form");
      },
      /** 搜索按钮操作 */
      handleQuery() {
        this.getList();
      },
      /** 重置按钮操作 */
      resetQuery() {
          #foreach ($column in $columnsBos)
              #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                  #set($AttrName=$column.enumName)
                this.daterange${AttrName} = [];
              #end
          #end
        this.resetForm("queryForm");
        this.handleQuery();
      },
      /** 新增按钮操作 */
      handleAdd(row) {
        this.reset();
        this.getTreeselect();
        if (row != null && row.${tablesBo.treeCode}) {
          this.form.${tablesBo.treeParentCode} = row.${tablesBo.treeCode};
        } else {
          this.form.${tablesBo.treeParentCode} = 0;
        }
        this.open = true;
        this.title = "添加${tablesBo.tableComment}";
      },
      /** 展开/折叠操作 */
      toggleExpandAll() {
        this.refreshTable = false;
        this.isExpandAll = !this.isExpandAll;
        this.$nextTick(() => {
          this.refreshTable = true;
        });
      },
      /** 修改按钮操作 */
      handleUpdate(row) {
        this.reset();
        this.getTreeselect();
        if (row != null) {
          this.form.${tablesBo.treeParentCode} = row.${tablesBo.treeCode};
        }
        get${tablesBo.className}(row.${tablesBo.primaryKeyJavaFiledName}).then(response => {
          this.form = response.data;
            #foreach ($column in $columnsBos)
                #if($column.htmlType == "checkbox")
                  this.form.$column.javaFiled = this.form.${column.javaFiled}.split(",");
                #end
            #end
          this.open = true;
          this.title = "修改${tablesBo.tableComment}";
        });
      },
      /** 提交按钮 */
      submitForm() {
        this.
      #
        [[$]]
        #refs["form"].validate(valid => {
          if (valid) {
            #foreach($column in $columnsBos)
            #if($column.htmlType == "checkbox")
            this.form.$column.javaFiled = this.form.$
            {
              column.javaFiled
            }
          .
            join(",");
            #end
            #end
            if (this.form.${
              tablesBo.primaryKeyJavaFiledName
            }
          !==
            null
          )
            {
              update$
              {
                tablesBo.className
              }
              (this.form).then(response => {
                this.
              #
                [[$modal]]
              #.
                msgSuccess("修改成功");
                this.open = false;
                this.getList();
              });
            }
          else
            {
              add$
              {
                tablesBo.className
              }
              (this.form).then(response => {
                this.
              #
                [[$modal]]
              #.
                msgSuccess("新增成功");
                this.open = false;
                this.getList();
              });
            }
          }
        });
      },
      /** 删除按钮操作 */
      handleDelete(row) {
        this.
      #
        [[$modal]]
      #.
        confirm('是否确认删除${tablesBo.tableComment}编号为"' + row.$
        {
          tablesBo.primaryKeyJavaFiledName
        }
        +'"的数据项？'
      ).
        then(function () {
          return del$
          {
            tablesBo.className
          }
          ([row.${tablesBo.primaryKeyJavaFiledName}]);
        }).then(() => {
          this.getList();
          this.
        #
          [[$modal]]
        #.
          msgSuccess("删除成功");
        }).catch(() => {
        });
      }
    }
  };
</script>
